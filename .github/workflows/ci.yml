name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  docker:
    name: Build and test docker image

    strategy:
      matrix:
        nominatim:
          - version: "4.2"
            update_command: docker exec -i nominatim sudo -u nominatim nominatim replication --project-dir /nominatim --once
            postgres_version: 14

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        run: docker build -t nominatim .
        working-directory: ${{ matrix.nominatim.version }}

      - name: Check import with PBF_URL and update
        working-directory: .github/workflows
        run: |-
          # get the data from four days ago to make sure there really are updates to apply
          four_days_ago=`date --date="4 days ago" +%y%m%d`
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-${four_days_ago}.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -p 8001:8080 \
            --name nominatim \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8001/search.php?q=avenue%20pasteur"
          ${{ matrix.nominatim.update_command }}
          ./assert-non-empty-json "http://localhost:8001/search.php?q=avenue%20pasteur"
          docker stop nominatim

      - name: Check import with volume mount
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -v nominatim-data:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -p 8002:8080 \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8002/search.php?q=avenue%20pasteur"

      - name: Check import with bind-mount
        working-directory: .github/workflows
        run: |-
          # get the data from four days ago to make sure there really are updates to apply
          four_days_ago=`date --date="4 days ago" +%y%m%d`
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-${four_days_ago}.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -v /tmp/nominatim-data:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -p 8003:8080 \
            --name nominatim \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8003/search.php?q=avenue%20pasteur"
          docker stop nominatim

      - name: Check container restart and update with bind-mount
        working-directory: .github/workflows
        run: |-
          # import to bind mount is done by previous step
          four_days_ago=`date --date="4 days ago" +%y%m%d`
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-${four_days_ago}.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -v /tmp/nominatim-data:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -p 8004:8080 \
            --name nominatim \
            nominatim &
          sleep 5
          ./assert-non-empty-json "http://localhost:8004/search.php?q=avenue%20pasteur"
          ${{ matrix.nominatim.update_command }}
          ./assert-non-empty-json "http://localhost:8004/search.php?q=avenue%20pasteur"
          docker stop nominatim

      - name: Check UPDATE_MODE=once with volume
        if: matrix.nominatim.version != '4.0'
        working-directory: .github/workflows
        run: |-
          # get the data from four days ago to make sure there really are updates to apply
          four_days_ago=`date --date="4 days ago" +%y%m%d`
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-${four_days_ago}.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -e UPDATE_MODE=once \
            -v nominatim-update-volume:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -p 8004:8080 \
            --name nominatim \
            nominatim &
          sleep 180
          ./assert-non-empty-json "http://localhost:8004/search.php?q=avenue%20pasteur"
          echo "check replication log for Update completed. Count:"
          docker exec -i nominatim grep -c 'Update completed.' /var/log/replication.log
          docker stop nominatim

      - name: Check UPDATE_MODE=continuous with bind-mount
        if: matrix.nominatim.version != '4.0'
        working-directory: .github/workflows
        run: |-
          # get the data from few days ago to make sure there really are updates to apply
          days_ago=`date --date="4 days ago" +%y%m%d`
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-${days_ago}.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -e UPDATE_MODE=continuous \
            -v /tmp/nominatim-update-bindmount:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -p 8004:8080 \
            --name nominatim \
            nominatim &
          sleep 180
          ./assert-non-empty-json "http://localhost:8004/search.php?q=avenue%20pasteur"
          echo "check replication log for Update completed. Count:"
          docker exec -i nominatim grep -c 'Update completed.' /var/log/replication.log
          docker stop nominatim

      - name: Check import full style
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -e IMPORT_STYLE=full \
            -p 8005:8080 \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8005/search.php?q=hotel%20de%20paris"

      - name: Check import admin style
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -e IMPORT_STYLE=admin \
            -p 8006:8080 \
            nominatim &
          sleep 120
          ./assert-empty-json "http://localhost:8006/search.php?q=hotel%20de%20paris"

      - name: Check import with PBF_PATH
        working-directory: .github/workflows
        run: |-
          wget --cut-dirs=1 -nH -xP /tmp/data http://download.geofabrik.de/europe/monaco-latest.osm.pbf
          docker run -i --rm \
            -e PBF_PATH=/nominatim/data/monaco-latest.osm.pbf \
            -e REPLICATION_URL=http://download.geofabrik.de/europe/monaco-updates/ \
            -v nominatim7-data:/var/lib/postgresql/${{ matrix.nominatim.postgres_version }}/main \
            -v /tmp/data:/nominatim/data \
            -p 8007:8080 \
            --name nominatim \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8007/search.php?q=avenue%20pasteur"
          docker stop nominatim
          docker volume rm nominatim7-data

      - name: Check when REPLICATION_URL is blank
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -p 8008:8080 \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8008/search.php?q=avenue%20pasteur"

      - name: Check when using FREEZE
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -e FREEZE="true" \
            -p 8008:8080 \
            nominatim &
          sleep 120
          ./assert-non-empty-json "http://localhost:8008/search.php?q=avenue%20pasteur"

      - name: Check when using REVERSE_ONLY
        working-directory: .github/workflows
        run: |-
          docker run -i --rm \
            -e PBF_URL=http://download.geofabrik.de/europe/monaco-latest.osm.pbf \
            -e REVERSE_ONLY="true" \
            -p 8010:8080 \
            nominatim &
          sleep 120
          ./assert-reverse-only "http://localhost:8010/search.php?q=avenue%20pasteur"
          ./assert-non-empty-json "http://localhost:8010/reverse.php?lat=43.734&lon=7.42&format=jsonv2"

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push production docker image to Dockerhub
        run: |-
          docker buildx build --platform linux/amd64,linux/arm64 --push \
            -t secrets.DOCKER_USERNAME/secrets.DOCKER_IMAGE_NAME:latest \
            -t secrets.DOCKER_USERNAME/secrets.DOCKER_IMAGE_NAME:${{ matrix.nominatim.version }} \
            -t secrets.DOCKER_USERNAME/secret.DOCKER_IMAGE_NAME:${{ matrix.nominatim.version }}-${{ github.sha }} .
        working-directory: ${{ matrix.nominatim.version }}
